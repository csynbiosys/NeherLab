function [model] = COVID19_NeherModel()

% model.AMIGOjac = 0;                                                         % Compute Jacobian 0 = No, 1 = yes
model.input_model_type='charmodelC';                                        % Model introduction: 'charmodelC'|'c_model'|'charmodelM'|'matlabmodel'|'sbmlmodel'|'blackboxmodel'|'blackboxcost                             

model.n_st=81;                                                               % Number of states      
model.n_par=44;                                                             % Number of model parameters 
model.n_stimulus=1;                                                         % Number of inputs, stimuli or control variables   
model.stimulus_names=char('M_t');                                % Name of stimuli or control variables
model.st_names=char('S_0','E_01','E_02','E_03','I_0','H_0','C_0','R_0','D_0', ...
                    'S_1','E_11','E_12','E_13','I_1','H_1','C_1','R_1','D_1', ...
                    'S_2','E_21','E_22','E_23','I_2','H_2','C_2','R_2','D_2', ...
                    'S_3','E_31','E_32','E_33','I_3','H_3','C_3','R_3','D_3', ...
                    'S_4','E_41','E_42','E_43','I_4','H_4','C_4','R_4','D_4', ...
                    'S_5','E_51','E_52','E_53','I_5','H_5','C_5','R_5','D_5', ...
                    'S_6','E_61','E_62','E_63','I_6','H_6','C_6','R_6','D_6', ...
                    'S_7','E_71','E_72','E_73','I_7','H_7','C_7','R_7','D_7', ...
                    'S_8','E_81','E_82','E_83','I_8','H_8','C_8','R_8','D_8');      % Names of the states     
                
model.par_names=char('Npop','R_0','epp','cosphase','t_i','t_l','t_c', 't_h',...
                     'ze_0','m_0','c_0','f_0', ...
                     'ze_1','m_1','c_1','f_1', ...
                     'ze_2','m_2','c_2','f_2', ...
                     'ze_3','m_3','c_3','f_3', ...
                     'ze_4','m_4','c_4','f_4', ...
                     'ze_5','m_5','c_5','f_5', ...
                     'ze_6','m_6','c_6','f_6', ...
                     'ze_7','m_7','c_7','f_7', ...
                     'ze_8','m_8','c_8','f_8');  % Names of the parameters    

% cos_phase is cos(2*pi*(t-tmax)), since I am not sure pi and cos will be
% valid options (just in case untill tested)
model.eqns=...                                                              % Equations describing system dynamics. Time derivatives are regarded 'd'st_name''
               char('bet = R_0*M_t*(1+epp*cosphase)/t_i',...
                    'I_all = I_0+I_1+I_2+I_3+I_4+I_5+I_6+I_7+I_8',...
                    ...
                    'dS_0 = -(1/Npop)*(ze_0*bet)*S_0*(I_all)',...
                    'dE_01 = (1/Npop)*(ze_0*bet)*S_0*(I_all) - 3*E_01/t_l',...
                    'dE_02 = 3*E_01/t_l - 3*E_02/t_l',...
                    'dE_03 = 3*E_02/t_l - 3*E_03/t_l',...
                    'dI_0 =  3*E_03/t_l - I_0/t_i',...
                    'dH_0 = (1-m_0)*I_0/t_l + (1-f_0)*C_0/t_c - H_0/t_h',...
                    'dC_0 = c_0*H_0/t_h - C_0/t_c',...
                    'dR_0 = m_0*I_0/t_i + (1-c_0)*H_0/t_h',...
                    'dD_0 = f_0*C_0/t_c',...
                    ...
                    'dS_1 = -(1/Npop)*(ze_1*bet)*S_1*(I_all)',...
                    'dE_11 = (1/Npop)*(ze_1*bet)*S_1*(I_all) - 3*E_11/t_l',...
                    'dE_12 = 3*E_11/t_l - 3*E_12/t_l',...
                    'dE_13 = 3*E_12/t_l - 3*E_13/t_l',...
                    'dI_1 =  3*E_13/t_l - I_1/t_i',...
                    'dH_1 = (1-m_1)*I_1/t_l + (1-f_1)*C_1/t_c - H_1/t_h',...
                    'dC_1 = c_1*H_1/t_h - C_1/t_c',...
                    'dR_1 = m_1*I_1/t_i + (1-c_1)*H_1/t_h',...
                    'dD_1 = f_1*C_1/t_c',...
                    ...
                    'dS_2 = -(1/Npop)*(ze_2*bet)*S_2*(I_all)',...
                    'dE_21 = (1/Npop)*(ze_2*bet)*S_2*(I_all) - 3*E_21/t_l',...
                    'dE_22 = 3*E_21/t_l - 3*E_22/t_l',...
                    'dE_23 = 3*E_22/t_l - 3*E_23/t_l',...
                    'dI_2 =  3*E_23/t_l - I_2/t_i',...
                    'dH_2 = (1-m_2)*I_2/t_l + (1-f_2)*C_2/t_c - H_2/t_h',...
                    'dC_2 = c_2*H_2/t_h - C_2/t_c',...
                    'dR_2 = m_2*I_2/t_i + (1-c_2)*H_2/t_h',...
                    'dD_2 = f_2*C_2/t_c',...
                    ...
                    'dS_3 = -(1/Npop)*(ze_3*bet)*S_3*(I_all)',...
                    'dE_31 = (1/Npop)*(ze_3*bet)*S_3*(I_all) - 3*E_31/t_l',...
                    'dE_32 = 3*E_31/t_l - 3*E_32/t_l',...
                    'dE_33 = 3*E_32/t_l - 3*E_33/t_l',...
                    'dI_3 =  3*E_33/t_l - I_3/t_i',...
                    'dH_3 = (1-m_3)*I_3/t_l + (1-f_3)*C_3/t_c - H_3/t_h',...
                    'dC_3 = c_3*H_3/t_h - C_3/t_c',...
                    'dR_3 = m_3*I_3/t_i + (1-c_3)*H_3/t_h',...
                    'dD_3 = f_3*C_3/t_c',...
                    ...
                    'dS_4 = -(1/Npop)*(ze_4*bet)*S_4*(I_all)',...
                    'dE_41 = (1/Npop)*(ze_4*bet)*S_4*(I_all) - 3*E_41/t_l',...
                    'dE_42 = 3*E_41/t_l - 3*E_42/t_l',...
                    'dE_43 = 3*E_42/t_l - 3*E_43/t_l',...
                    'dI_4 =  3*E_43/t_l - I_4/t_i',...
                    'dH_4 = (1-m_4)*I_4/t_l + (1-f_4)*C_4/t_c - H_4/t_h',...
                    'dC_4 = c_4*H_4/t_h - C_4/t_c',...
                    'dR_4 = m_4*I_4/t_i + (1-c_4)*H_4/t_h',...
                    'dD_4 = f_4*C_4/t_c',...
                    ...
                    'dS_5 = -(1/Npop)*(ze_5*bet)*S_5*(I_all)',...
                    'dE_51 = (1/Npop)*(ze_5*bet)*S_5*(I_all) - 3*E_51/t_l',...
                    'dE_52 = 3*E_51/t_l - 3*E_52/t_l',...
                    'dE_53 = 3*E_52/t_l - 3*E_53/t_l',...
                    'dI_5 =  3*E_53/t_l - I_5/t_i',...
                    'dH_5 = (1-m_5)*I_5/t_l + (1-f_5)*C_5/t_c - H_5/t_h',...
                    'dC_5 = c_5*H_5/t_h - C_5/t_c',...
                    'dR_5 = m_5*I_5/t_i + (1-c_5)*H_5/t_h',...
                    'dD_5 = f_5*C_5/t_c',...
                    ...
                    'dS_6 = -(1/Npop)*(ze_6*bet)*S_6*(I_all)',...
                    'dE_61 = (1/Npop)*(ze_6*bet)*S_6*(I_all) - 3*E_61/t_l',...
                    'dE_62 = 3*E_61/t_l - 3*E_62/t_l',...
                    'dE_63 = 3*E_62/t_l - 3*E_63/t_l',...
                    'dI_6 =  3*E_63/t_l - I_6/t_i',...
                    'dH_6 = (1-m_6)*I_6/t_l + (1-f_6)*C_6/t_c - H_6/t_h',...
                    'dC_6 = c_6*H_6/t_h - C_6/t_c',...
                    'dR_6 = m_6*I_6/t_i + (1-c_6)*H_6/t_h',...
                    'dD_6 = f_6*C_6/t_c',...
                    ...
                    'dS_7 = -(1/Npop)*(ze_7*bet)*S_7*(I_all)',...
                    'dE_71 = (1/Npop)*(ze_7*bet)*S_7*(I_all) - 3*E_71/t_l',...
                    'dE_72 = 3*E_71/t_l - 3*E_72/t_l',...
                    'dE_73 = 3*E_72/t_l - 3*E_73/t_l',...
                    'dI_7 =  3*E_73/t_l - I_7/t_i',...
                    'dH_7 = (1-m_7)*I_7/t_l + (1-f_7)*C_7/t_c - H_7/t_h',...
                    'dC_7 = c_7*H_7/t_h - C_7/t_c',...
                    'dR_7 = m_7*I_7/t_i + (1-c_7)*H_7/t_h',...
                    'dD_7 = f_7*C_7/t_c',...
                    ...
                    'dS_8 = -(1/Npop)*(ze_8*bet)*S_8*(I_all)',...
                    'dE_81 = (1/Npop)*(ze_8*bet)*S_8*(I_all) - 3*E_81/t_l',...
                    'dE_82 = 3*E_81/t_l - 3*E_82/t_l',...
                    'dE_83 = 3*E_82/t_l - 3*E_83/t_l',...
                    'dI_8 =  3*E_83/t_l - I_8/t_i',...
                    'dH_8 = (1-m_8)*I_8/t_l + (1-f_8)*C_8/t_c - H_8/t_h',...
                    'dC_8 = c_8*H_8/t_h - C_8/t_c',...
                    'dR_8 = m_8*I_8/t_i + (1-c_8)*H_8/t_h',...
                    'dD_8 = f_8*C_8/t_c');


                
% Example parameters to compare with webapp results (United States)   
% Phase
NumDays = daysact('1-feb-2002',  '1-sep-2002');
month2day = @(x) x*30+15;
cp = cos(2*pi*((NumDays/365)-(month2day(0)/365)));

% Age deppendent parameters
confirmed = ([5, 5, 10, 15, 20, 25, 30, 40, 50]) / 100;
severe    = ([1, 3, 3, 3, 6, 10, 25, 35, 50]) / 100;
severe    =  severe.*confirmed;
critical  = ([5, 10, 10, 15, 20, 25, 35, 45, 55]) / 100;
fatality  = ([30, 30, 30, 30, 30, 40, 40, 50, 50]) / 100;
recovery  = 1 - severe;
% discharge = 1 - critical;
% stabilize = 1 - fatality;
% reported=1/30;
isolated = ([5, 5, 5, 5, 5, 5, 5, 5, 5]) / 100;

model.par=[330000000,3.2,0.1,cp,3,3,14,3,...
          isolated(1),recovery(1),critical(1),fatality(1),...
          isolated(2),recovery(2),critical(2),fatality(2),...
          isolated(3),recovery(3),critical(3),fatality(3),...
          isolated(4),recovery(4),critical(4),fatality(4),...
          isolated(5),recovery(5),critical(5),fatality(5),...
          isolated(6),recovery(6),critical(6),fatality(6),...
          isolated(7),recovery(7),critical(7),fatality(7),...
          isolated(8),recovery(8),critical(8),fatality(8),...
          isolated(9),recovery(9),critical(9),fatality(9)];  


% par_names=char('Npop','R_0','epp','cosphase','t_i','t_l','t_c','t_h',...
%              'ze_0','m_0','c_0','f_0', ...
%              'ze_1','m_1','c_1','f_1', ...
%              'ze_2','m_2','c_2','f_2', ...
%              'ze_3','m_3','c_3','f_3', ...
%              'ze_4','m_4','c_4','f_4', ...
%              'ze_5','m_5','c_5','f_5', ...
%              'ze_6','m_6','c_6','f_6', ...
%              'ze_7','m_7','c_7','f_7', ...
%              'ze_8','m_8','c_8','f_8');  






end