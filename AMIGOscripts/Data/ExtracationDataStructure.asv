% Extraction of data structure for parameter estimation from 
% 

DataTable = readtable('Italy_NationalData_20200426.csv'); 
%% Plot to try and understand the data
figure; 
plot(1:1:size(DataTable,1),DataTable.H_with_symptoms,...
     1:1:size(DataTable,1),DataTable.C,...
     1:1:size(DataTable,1),DataTable.Total_H_C);
 legend('Hospital','ICU','TotalHospital')
 
DataTable.Total_H_C ==  DataTable.H_with_symptoms+DataTable.C
%% Notes
Hospital DataTable.H_with_symptoms;
ICU DataTable.C;
Recovered DataTable.R_from_H
Death DataTable.D
Infectious DataTable.Home_confinement
%%
DataTable.Total_cases == DataTable.Total_positive_H_C_Home+DataTable.D_cum+DataTable.R_from_H;
figure; 
plot(1:1:size(DataTable,1),DataTable.Total_cases,...
     1:1:size(DataTable,1),DataTable.Total_positive_H_C_Home);
legend('TotalCases','TotalPositives')
%%
Data.exp_type{1} = 'fixed';
Data.n_obs{1} = 
Data.start_date{1} = datestr(DataTable.Date(1,1))
Data.end_date{1} = datestr(DataTable.Date(end,1))
Data.obs_names{1} = 
Data.obs{1} = 
Data.n_s{1} = size(DataTable,1)*ones(Data.n_obs{1},1);
Data.t_f{1} = 
Data.t_s{1} = repmat([1:1:Data.t_f{1}],Data.n_obs{1},1);
Data.t_con{1} = 
Data.u{1} = 
Data.exp_data{1} = 
Data.error_data{1} =
Data.n_pulses{1} = [];
Data.data_type{1} = 'real';
Data.noise_type{1} = 'hetero';

newExps.n_exp = 1;                                         % Number of experiments 
newExps.n_obs{1}=7;                                        % Number of observables per experiment        
newExps.obs_names{1} = char('Infected0','Hospitalised0', 'Critical0', 'Recovered0', 'Dead0', 'CumulativeHospital', 'CumulativeCritical');
                        
newExps.obs{1} = char('Infected0 = Inf_0','Hospitalised0 = Sev_0','Critical0 = Cri_0','Recovered0 = Rec_0','Dead0 = Fat_0', 'CumulativeHospital = CumHos_0', 'CumulativeCritical = CumCri_0');% Name of the observables 

newExps.exp_y0{1}=y0;                                      % Initial condition for the experiment    

newExps.t_f{1}=duration;                                   % Experiment duration
newExps.n_s{1}=duration;                             % Number of sampling times
newExps.t_s{1}=0:duration;                              % Times of samples
